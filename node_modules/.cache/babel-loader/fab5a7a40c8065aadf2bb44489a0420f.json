{"remainingRequest":"/Users/Jake/Desktop/spaceX/node_modules/babel-loader/lib/index.js!/Users/Jake/Desktop/spaceX/src/store.js","dependencies":[{"path":"/Users/Jake/Desktop/spaceX/src/store.js","mtime":1551405222000},{"path":"/Users/Jake/Desktop/spaceX/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jake/Desktop/spaceX/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/Jake/Desktop/spaceX/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    launches: \"DATA NOT FETCHED\",\n    rockets: \"DATA NOT FETCHED\",\n    darkMode: false,\n    loggedIn: false,\n    userInfo: \"DATA NOT FETCHED\"\n  },\n  mutations: {\n    setUserInfo: function setUserInfo(state, payload) {\n      state.userInfo = payload;\n      console.log(payload);\n    },\n    setLogin: function setLogin(state) {\n      state.loggedIn = true;\n    },\n    setLogout: function setLogout(state) {\n      state.loggedIn = false;\n    },\n    setDarkmode: function setDarkmode(state) {\n      if (state.darkMode == true) {\n        state.darkMode = false;\n        console.log(\"lightson\");\n        console.log(state.darkMode);\n      } else {\n        state.darkMode = true;\n        console.log(\"lightsoff\");\n      }\n\n      console.log(state.darkMode);\n    },\n    setLaunches: function setLaunches(state, payload) {\n      state.launches = payload;\n    },\n    setRockets: function setRockets(state, payload) {\n      state.rockets = payload;\n    }\n  },\n  actions: {\n    setUserInfo: function setUserInfo(_ref, payload) {\n      var commit = _ref.commit;\n      commit('setUserInfo', payload);\n    },\n    logout: function logout(_ref2, plan) {\n      var commit = _ref2.commit;\n      commit('setLogout');\n    },\n    login: function login(_ref3, plan) {\n      var commit = _ref3.commit;\n      commit('setLogin');\n    },\n    changeDarkmode: function changeDarkmode(_ref4, plan) {\n      var commit = _ref4.commit;\n      commit('setDarkmode');\n    },\n    getLaunches: function () {\n      var _getLaunches = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref5, plan) {\n        var commit, response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref5.commit;\n                _context.prev = 1;\n                _context.next = 4;\n                return axios.get(\"https://api.spacexdata.com/v3/launches\", {});\n\n              case 4:\n                response = _context.sent;\n                commit('setLaunches', response.data);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                commit('setLaunches', []);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n\n      function getLaunches(_x, _x2) {\n        return _getLaunches.apply(this, arguments);\n      }\n\n      return getLaunches;\n    }(),\n    getRockets: function () {\n      var _getRockets = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref6, plan) {\n        var state, commit, response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = _ref6.state, commit = _ref6.commit;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return axios.get(\"https://api.spacexdata.com/v3/rockets\", {});\n\n              case 4:\n                response = _context2.sent;\n                commit('setRockets', response.data);\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                commit('setRockets', []);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 8]]);\n      }));\n\n      function getRockets(_x3, _x4) {\n        return _getRockets.apply(this, arguments);\n      }\n\n      return getRockets;\n    }()\n  }\n});",{"version":3,"sources":["/Users/Jake/Desktop/spaceX/src/store.js"],"names":["Vue","Vuex","axios","use","Store","state","launches","rockets","darkMode","loggedIn","userInfo","mutations","setUserInfo","payload","console","log","setLogin","setLogout","setDarkmode","setLaunches","setRockets","actions","commit","logout","plan","login","changeDarkmode","getLaunches","get","response","data","getRockets"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    launches: \"DATA NOT FETCHED\",\n    rockets: \"DATA NOT FETCHED\",\n    darkMode: false,\n    loggedIn: false,\n    userInfo: \"DATA NOT FETCHED\"\n  },\n  mutations: {\n    setUserInfo(state, payload) {\n      state.userInfo = payload;\n      console.log(payload)\n    },\n\n    setLogin(state) {\n      state.loggedIn = true\n    },\n    setLogout(state) {\n      state.loggedIn = false\n    },\n    setDarkmode(state) {\n      if (state.darkMode == true) {\n        state.darkMode = false\n        console.log(\"lightson\")\n        console.log(state.darkMode)\n      } else{state.darkMode = true\n        console.log(\"lightsoff\")}\n        console.log(state.darkMode)},\n    \n    setLaunches(state, payload) {\n      state.launches = payload;\n    },\n    setRockets(state, payload) {\n      state.rockets = payload;\n    }\n  },\n  actions: {\n      setUserInfo({\n        commit\n      }, payload) {\n        commit('setUserInfo', payload)\n      },\n\n\n      logout({\n        commit\n      }, plan) {\n        commit('setLogout')\n      },\n\n      login({\n        commit\n      }, plan) {\n        commit('setLogin')\n      },\n\n      changeDarkmode({\n        commit\n      }, plan) {\n        commit('setDarkmode')\n      },\n\n      async getLaunches({\n        commit\n      }, plan) {\n\n        try {\n          let response = await axios.get(`https://api.spacexdata.com/v3/launches`, {});\n          commit('setLaunches', response.data);\n        } catch (error) {\n          commit('setLaunches', []);\n        }\n      },\n\n      async getRockets({\n          state,\n          commit\n        }, plan) {\n          try {\n            let response = await axios.get(`https://api.spacexdata.com/v3/rockets`, {});\n            commit('setRockets', response.data);\n          } catch (error) {\n        commit('setRockets', []);\n      }\n    }\n  }\n})"]}]}